<!DOCTYPE html>
<!-- saved from url=(0063)https://www.waveguide.se/?article=8-bit-compact-flash-interface -->
<html lang="en" class=" mjkuzjn idc0_350"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="description" content="In my first 6303 based computer I used floppies for secondary storage. Even though it worked very well floppies are relatively small, fragile, slow and, above all, they are outdated. Today there are easier and more convenient ways of storing large amounts...">
<meta property="og:site_name" content="www.waveguide.se">
<meta property="og:title" content="8-bit compact flash interface « waveguide.se">
<meta property="og:description" content="In my first 6303 based computer I used floppies for secondary storage. Even though it worked very well floppies are relatively small, fragile, slow and, above all, they are outdated. Today there are easier and more convenient ways of storing large amounts...">
<!-- <meta property="og:image" content="image" /> -->
<link rel="stylesheet" type="text/css" href="./TASMMAN_files/style.css">
<link rel="stylesheet" type="text/css" href="./TASMMAN_files/overlay.css">
<link rel="stylesheet" type="text/css" href="./TASMMAN_files/style_article.css">
<title>8-bit compact flash interface « waveguide.se</title>
<script type="text/javascript" async="" src="./TASMMAN_files/js"></script><script async="" src="./TASMMAN_files/analytics.js"></script><script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-60715388-1', 'auto');
  ga('send', 'pageview');
</script></head>
<body>

  <div id="main">
    <!-- begin main -->

    <div id="header"><div style="float: right;"><b>www.waveguide.se</b></div><div id="header-logo"><a href="https://www.waveguide.se/" class="noline" style="color:white">Daniel's bits, bytes &amp; pieces</a></div></div>

    <div id="content">
      <!-- begin content -->
      <span itemscope="" itemtype="http://schema.org/Article"><div class="article-header"><a class="article-header" href="https://www.waveguide.se/?article=8-bit-compact-flash-interface"><span itemprop="name">8-bit compact flash interface</span></a></div><div class="article-header2"><span itemprop="datePublished">2014-01-18 11:45 UTC</span></div><div itemprop="articleBody" class="article-content">In my first 6303 based computer I used floppies for secondary storage. Even though it worked very well floppies are relatively small, fragile, slow and, above all, they are outdated. Today there are easier and more convenient ways of storing large amounts of data. Even for a small 8-bit system. A while back I investigated the possibility to use IDE/ATA hard drives. Commonly available IDE drives are cheap and easy to obtain but they have 16-bit interfaces and needs some clever latching to make use of all 16 bits in an 8-bit system. Not really a big issue once you have your hardware done and driver written but it slows down disk access considerably (usually around a factor of two unless you do some kind of DMA). Older IDE drives for IBM-XT had an 8-bit mode that would effectively disable the upper 8-bits of the interface and pass all data through the lower 8-bits meaning they could be directly attached to an 8-bit system. Problem is that those drives are hard to find, small and old. Not a good solution for a new design.

Today compact flash cards ("CF-cards") are commonly used in digital cameras and media players etc. They are in many situations replaced by the cheaper secure digital cards ("SD-cards") but CF-cards are still widely available and in use. Especially in systems needing high performance storage such as professional cameras, measure instruments and such. The interesting thing about CF-cards is that they can be configured for an IDE/ATA mode meaning that they would work just like an IDE hard drive. But one thing is particularly interesting. <i>The old 8-bit mode from the XT-days is back!</i> This makes the hardware interface ridiculously simple as the card acts just as a regular Intel-bus peripheral device.

<a href="javascript:void(0)" onclick="overlaySetImage(&#39;/?article=26&amp;file=mc3-io-cf-sch.png&#39;); overlayShow()"><img class="article-image" src="./TASMMAN_files/mc3-io-cf-sch.png"></a>
Above is my 8-bit interface for IDE/ATA mode. It is based on a design i found in an old SanDisk white-paper and connects directly to my MC3 I/O bus. The CF-card maps into the address space using three address lines for a total of eight registers. When using the card in LBA mode the register map looks like this (table taken from Motorola assembly code).

<code>CFREG0	EQU	CFBASE+0	DATA PORT
CFREG1	EQU	CFBASE+1	READ: ERROR CODE, WRITE: FEATURE
CFREG2	EQU	CFBASE+2	NUMBER OF SECTORS TO TRANSFER
CFREG3	EQU	CFBASE+3	SECTOR ADDRESS LBA 0 [0:7]
CFREG4	EQU	CFBASE+4	SECTOR ADDRESS LBA 1 [8:15]
CFREG5	EQU	CFBASE+5	SECTOR ADDRESS LBA 2 [16:23]
CFREG6	EQU	CFBASE+6	SECTOR ADDRESS LBA 3 [24:27 (LSB)]
CFREG7	EQU	CFBASE+7	READ: STATUS, WRITE: COMMAND</code> 
Just like a usual IDE hard drive. The 8-bit mode is activated by writing $01 to the FEATURE register (CFREG1) and then issuing the SET FEATURE command by writing $FE to the COMMAND register (CFREG7).

The trickiest part of a CF interface may be to solder the CF socket. All sockets that I know are made for surface mounting and the pins are packed together really tight. I soldered thin wire-wrap wires to the pins to make my adapter.

<a href="javascript:void(0)" onclick="overlaySetImage(&#39;/?article=26&amp;file=mc3-io-cf-top.jpg&#39;); overlayShow()"><img class="article-image" src="./TASMMAN_files/mc3-io-cf-top.jpg"></a>
Picture of the finished CF interface for the MC3 bus.

I wrote a quick test program for verifying the interface that reads card information and sector of choice.
<code>  Serial: DDZ010811032342
Firmware: HDX 6.03
   Model: SanDisk SDCFH-004G
LBA size: 00 77 38 00</code>
<a href="https://www.waveguide.se/?article=26&amp;file=cftest.asm" target="_blank">Source code</a>

I'm working on a very simple file system for use with the CF-card but that will be presented in a separate article.</div><div class="article-footer">by <span itemprop="author">daniel</span> | <a href="https://www.waveguide.se/?article=8-bit-compact-flash-interface#comments">comments [23]</a><div style="float: right;">MC3 8bit</div></div>
</span><a id="comments"></a>
<div class="article-comment"><div class="article-header2">by <b>Mikey</b> 2014-05-14 11:51 UTC</div><div class="article-content">Could this be used to replace failed IBM-XT drives (which as you say are nigh on impossible to find working!), I'm not sure I understand the differences between MC3 and IBM-XT 8bit.</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Daniel</b> 2014-05-15 11:35 UTC</div><div class="article-content">Hi Mikey! Thank you for reading. Interesting thought. I think it may be possible. Some intelligent adapter may be needed to initialize the CF-card into an XT compatible state on powerup but I'm not quite sure. I will have to check the specs more closely.</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Daniel</b> 2014-05-22 11:49 UTC</div><div class="article-content">I'm afraid an intelligent adapter is needed but if you mean to replace drives in an IBM PC XT/AT there may be a clean solution.
I found this: http://www.lo-tech.co.uk/wiki/XT-CF-lite</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Peter</b> 2015-06-28 10:43 UTC</div><div class="article-content">Hi Daniel,

for several projects I have used the standard 16-bit IDE interface to interface
my 6502 computers with compact flashes and that worked fine. Then I learned that
CF Cards also have a 8-bit mode to read and write the sector buffer and started
using the 8-bit interface in one of my projects. However I had various stages of
success. Then about 1 month ago I saw your articel and what I saw in your source
code is that you first select the mode and drive (write $E0 to UNIT register) and
then set the feature (1 to the FEATURE register) and then the command ($EF set feature
to the command register). As it seams many CF-Cards will not work when you change the 
order (1 to FEATURE, $E0 to UNIT and $EF to COMMAND register). So your source code
solved quit a lot of issues. So thanks a lot.

I still have problems with some CF Cards but a set of CF Cards I pulled of from
old routers work now perfectly.

Peter
</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Daniel</b> 2015-06-29 11:01 UTC</div><div class="article-content">Hi Peter! Thank you for sharing your discoveries. It took me some trial and error before I got it right also. I suspect that changing mode via REG6 in mid-flight is a bit shaky. I read somewhere that the SET FEATURE command should be issued directly after every FEATURE written. The documentation I've found so far is also pretty vague about the 8-bit mode. Perhaps it's not even supported on all cards. It would not surprise me. I have used only SanDisk (4GB and 8GB) and Kingston (2GB) and they have all worked fine so far.</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Mikey</b> 2015-09-03 08:04 UTC</div><div class="article-content">Hi Daniel,

Another year older....
I was thinking, to emulate an old XT drive, would it be possible to intercept the RDY signal (i.e. don't pass it on to the host), wait until it's ready, initialise it into 8 bit mode, then just pass through the RDY signal after that transparently?

That way the host doesn't see it as ready until after the card has been initialised into 8 bit, so, as you say, a "smart controller" that only has control until after the card is initialised, and after then merely mirrors the ready signal?

So, the ready signal would be cut and (say) passed through a PIC, but not mirrored through until after the card is in 8 bit mode.

And (I was thinking), this would be a potentially easy hack by using an IDE -&gt; CF adaptor and either cut a trace or intercept the RDY (and then inject into the other lines).

Of course, this may all be moot - I was thinking this might work for old kit (like Amiga A590 enclosures) but it may not understand the disk geometry as they were only 20/40mb drives back then.

What do you think?
Mike
</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Daniel</b> 2015-09-06 10:24 UTC</div><div class="article-content">Hi Mikey!

From what I can see while digging deeper into the specs it looks like the XTA interface uses a different register set than ATA. Most obvious difference is that XTA has 4 registers while ATA has 8. Looking at the old XTA pinout also I noticed that the connector is missing address line A2 that is used in ATA. Thus an XTA controller can not cannot reach the upper 4 register of an ATA drive (or CF) since A2 will be tied to ground. Setting a CF-card to 8-bit mode only changes the data transfer width. It's still using the ATA register set. What we would need is some form of true XT emulation mode that also changes the register set but I'm not sure if such a thing exists.

If I'm not mistaken the Amiga A590 has both an internal XTA and SCSI interface. Since SCSI drives are still somewhat obtainable that may be the easiest solution. I know there are SCSI to ATA adapters but they can be a bit pricey. I also know these adapters work with CF-cards in ATA mode so if you really want a CF card in an A590 that is the only of-the-shelf solution I know of.

Another approach is of course to rewire the A590 and find a free I/O pin somewhere to use for A2. That way I believe an ATA drive could be directly connected. It does however require a substantial modification to the firmware!</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Mikey</b> 2015-09-29 12:15 UTC</div><div class="article-content">Hi Daniel,
I think you're right, it's probably the death knell for any chance to practically revive the A590 XTA! I'm a big fan of cheap hacks! there's a cool project which is a SCSI to SD card (kind of perfect for the A590 not the cheapest but as you say, SCSI to ATA are available but £££) I still have some 50 pin SCSI around, although they do sound like a Vulcan passing overhead.
Cheers again.</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>JG</b> 2016-09-21 16:42 UTC</div><div class="article-content">A friend and myself were bouncing around the idea of using an AVR and some tri state buffers to set the thing into 8 bit mode so we can use the CF on an XT-IDE type system.  Should be done on power up by the AVR (it'll then activate the buffers so the host can see it) and it'll be initialized long before the host system posts.

Thoughts?</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Daniel</b> 2016-09-22 09:02 UTC</div><div class="article-content">I like the idea! In theory I think It should be possible but what I don't know is how compatible the CF registers actually are when compared to the XT-IDE. One other way may perhaps be to connect a really fast AVR in line all the time to emulate an XT-IDE command set and control the CF separately.

[host] &lt;--&gt; [AVR] &lt;--&gt; [CF]

The big question is though if we can find an AVR fast enough to satisfy the bus timings on the host side. Perhaps an FPGA is the only way to go.</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Oldman</b> 2018-10-03 18:57 UTC</div><div class="article-content">I was wondering can this be sub inplace of a SRAM that is currently in the system for booting. The SRAM connects via an IDE on the board.  It kind of replaces the old way of booting off a floppy disk.  </div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>CrafterOfWorlds</b> 2018-10-12 04:39 UTC</div><div class="article-content">Thanks a ton, man! Helped a lot with my Z80 based single board</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Francois Laagel</b> 2019-04-17 16:48 UTC</div><div class="article-content">This is very nice, conceptually. However, you wire WE- to Vcc in your schematics, which is weird. One would expect you to be able to write data to the device... Also you do not specify which type of connector you're using. I recently bought ($60) a copy of the ATA4 standard (1998). Unfortunately, programming a content of #1 in the FEATURE register is considered a 'RETIRED' thing. In effect, this may or may not work depending on how old your target device is. Furthermore, there is no such thing as A03-A10. Are you referring to a more recent thing than the ATA4 standard?

That being said I like what you did, a lot. I am working on a similar design myself, targeting the 6309 (Hitachi's improved version of the 6809). The stuff runs at 3 MHz and I have the 63B05 ACIA working fine at 15200 bps.
My next step should probably be to go for an I2C interface for RTC support. The next thing after that will be the CompactFlash interface (128MB Transcend industrial, coupled to an adapter I found at proto-advantage.com--the old Sparkfun breakout board is no longer available).

Is your filesystem implementation in any way public? I'd be interested in not re-inventing the wheel.

All the best.

        Francois Laagel
</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Daniel</b> 2019-04-20 19:28 UTC</div><div class="article-content">Hi Francois! Thank you for your interest in my ideas. In this design I use the CompactFlash card in ATA mode. In that case the WE pin is not needed and should be tied to Vcc. IOWR and IORD is used as read and write strobes which complies with the ATA standard. I have used the "SanDisk CompactFlash Memory Card OEM Product Manual" (2010) as design reference in this case. 

One very nice thing about CompactFlash cards is that 8 bit transfers in ATA mode are still part of the modern specification. That's one of the reasons that I opted to implement CompactFlash interfaces for my MC3 computer instead of IDE/ATA.

My latest file system, MCFS2, design and specification including all source code is here on the website. Please refer to the articles titled "MCFS". Most recent release is MCFS 2.0.2. Source is for the 6303 but I've have compiled and tested it on 6309 also. Good luck with your project! Always fun to hear about new constructions!</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Francois Laagel</b> 2019-04-30 16:47 UTC</div><div class="article-content">Hi Daniel,

I apologize because I was not using the correct standard! ATA-4 is not the relevant document. ftp://ftp.wintel.fi/manuals/General/CompactFlash.pdf has The CFA CompactFlash specification version 1.4 (and it's free) and documents the actual pinout of the 50-pin connector!

I hope you are correct with respect to the 8-bit mode. I plan on using a Transcend CF300 Industrial (128MB). And I will definitely start from your design and probably even your code, since the 6309 supports the 6800 instruction set.

Your file system may also be of interest to me later on.

Keep it up, man. That's really cool stuff.

        Francois Laagel
</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Daniel</b> 2019-05-01 05:31 UTC</div><div class="article-content">I wouldn't worry too much. I have yet to find a CF card that does not support 8-bit transfers. The 8-bit feature (01h) is mentioned on page 85 in the 1.4 CF spec sheet (table 45). It's pretty straight forward. My biggest problem with breadboarding CF cards is actually soldering those tiny connectors :)

Please also have a look at my MCFS2 writeup. Besides the file system itself it also contains an improved hardware interface.

https://www.waveguide.se/?article=mcfs2-a-file-system</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Francois Laagel</b> 2019-05-02 15:23 UTC</div><div class="article-content">Hi Daniel,

You're very brave soldering tiny SMT sockets like this. For the rest of us, breadboarding or wire wrapping like myself, there is always https://www.proto-advantage.com/store/product_info.php?products_id=2800021.

All the best.

        Francois</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>John Gay</b> 2019-08-01 20:21 UTC</div><div class="article-content">I am currently expanding on a 68000 based machine and was looking for an external storage solution when I found you article.
Since my system has a 16 bit buss, I am guessing that I could just use the 16 bit outputs with just a few modifications to the source code. Is this correct?</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Daniel</b> 2019-08-01 21:54 UTC</div><div class="article-content">Hi John! Yes, you are correct. Without setting the 8-bit feature command, the card will operate in the default 16-bit mode.</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Francois Laagel</b> 2020-03-17 10:31 UTC</div><div class="article-content">It is refreshing to see someone who still uses ASCII EOT to terminate strings! About decoupling, since a CompactFlash device can use up to 200 mA in bursts, what kind of capacitor would you recommend?</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Daniel</b> 2020-03-17 17:46 UTC</div><div class="article-content">I like mixing old with new and in order to stay compatible with MIKBUG the ASCII EOT lives on! :)

Regarding capacitors I have found that most modern CF cards are surprisingly tolerant actually under these circumstances. On my MC3 OS card I did not even need any extra decoupling for the two CF sockets. On that board I only have one single good quality 100uF aluminium electrolytic across the main supply along with decoupling on all ICs, 100nF each. The access pattern greatly affects the supply requirements. My slow ~1MHz bus machine will only load the cards to a fraction of what they are capable of. SanDisk specify 500mA current requirements for the cards I use but I come nowhere near that. Way below a tenth of that peak per card during access with an idle current of just over a mA. Perhaps if I used older and more power hungry CF cards things would be different. If I were to have issues I would probably add something like 10uF + 100nF across the power rails as close to the CF sockets as possible to leave some headroom for different card requirements. The choice of aluminium vs. tantalum capacitors would depend on the rest of the design and especially the power supply. Using tantalums will generally yield lower ESR and the construction can be made smaller but one must take into account that tantalums tend to fail short when going bad so the power supply must be designed with that in mind to keep the magic smoke from escaping.</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>david Lund</b> 2020-08-08 17:27 UTC</div><div class="article-content">hi - i've had no luck trying to find the pinouts for the 40-pin motherboard header for the long obsolete xta hard drives.  i saw a very good youtube video on repair of a late-1980s xt clone [phillips 3120, i think].  the motherboard had a 40-pin male header for a ribbon cable to what was described as an 8-bit ide drive.  said drive was dead, of course.  i'm trying to figure out if a cheapie 40-pin female ide2cf_or_sd adapter might be a simple plug-in fix, or perhaps w/ an intervening custom cable or card.  pls point me toward a url for pinout info for the xta header.  thank you for your help.  take care &amp; stay safe.  david Lund  70yo tinkerer &amp; curmudgeon</div></div><br><br>
<div class="article-comment"><div class="article-header2">by <b>Daniel</b> 2020-08-09 12:21 UTC</div><div class="article-content">Hi David! While the XTA is indeed 8-bit it is unfortunately not compatible with the 8-bit compact flash mode. The only compatible devices that I know of are the real drives that are pretty much unobtainium these days.

XTA pinout:
RST B1 A1 GND
SD7 B2 A2 GND
SD6 B3 A3 GND
SD5 B4 A4 GND
SD4 B5 A5 GND
SD3 B6 A6 GND
SD2 B7 A7 GND
SD1 B8 A8 GND
SD0 B9 A9 GND
^CS1 B10 A10 GND
AEN B11 A11 GND
^IOW B12 A12 GND
^IOR B13 A13 GND
^DACK3 B14 A14 GND
DRQ3 B15 A15 GND
IRQ5 B16 A16 GND
A1 B17 A17 RSVD
A0 B18 A18 GND
^PRICS B19 A19 GND
^ACTIVE B20 A20 GND

To use a compact flash on an XT machine I would strongly recommend the XT-IDE project which is an 8-bit ISA card containing IDE/CF interface along with an option ROM for driving IDE devices. A search for "XT-IDE" gave several ideas and there are ready made cards on eBay for reasonable prices.</div></div><br><br>
<h2>Write a comment</h2><form action="https://www.waveguide.se/?article&amp;comment&amp;new" method="post"><input type="hidden" name="id" value="26"><input type="hidden" name="key" value="2415">Name or handle<br><input type="text" class="input-text" name="author_name" value=""><br>E-mail (optional and not visible to others)<br><input type="text" class="input-text" name="author_email" value=""><br>Comment<br><textarea class="input-text" name="content" style="width: 50%; height: 100px;"></textarea><br><img src="./TASMMAN_files/protectimg.php"><br>Code from above<br><input type="text" class="input-text" name="code"><br><br><input type="submit" class="input-submit" value="Send"> </form>      <!-- end content -->
    </div>

    <div id="content-right-wrap">
      <!-- begin content right -->
      <nav>

<!-- Search -->
<div class="content-right-object">
  <b>Search</b><br>
  <form action="https://www.waveguide.se/?" method="get">
  <input type="text" class="input-text" name="search" style="width: 99%; margin-top: 10px;">
  </form>
</div>

<!-- Nav menu-->
<div class="content-right-object">
<b>Areas</b><br>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article">Latest articles</a></div><div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?tool">Tools</a></div><div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?feed">Feed</a></div><div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?about">About</a></div></div>

<!-- Article categories -->
<div class="content-right-object">
<b>MC3 computer</b><br>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=mcfs-203">MCFS 2.0.3</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=storing-data-on-cassettes">Storing data on cassettes</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=native-assembler-and-line-editor">Native assembler and line editor</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=calixto-island-adventure">Calixto Island Adventure</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=mcfs202">MCFS 2.0.2</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=mcfs2-a-file-system">MCFS2 - A file system!</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=the-ym2413-fm-opll">The YM2413 FM OPLL</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=68xx-cross-assembler">68xx cross assembler</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=mc3-monitor-141">MC3 monitor 1.4.1</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=buffered-i2c-interface">Buffered I²C interface</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=the-versatile-interface-adapter">The Versatile Interface Adapter</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=a-bigger-case-for-the-mc3">A bigger case for the MC3</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=reading-flex-disk-images">Reading FLEX disk images</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=bitmapped-video-interface">Bitmapped video interface</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=mc3-monitor-14">MC3 monitor 1.4</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=ym-playback-on-the-ymz284">YM playback on the YMZ284</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=ymz284-sound-interface">YMZ284 sound interface</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=automatic-mikbug-patcher">Automatic MIKBUG patcher</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=mc3-monitor-13">MC3 monitor 1.3</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=a-better-serial-port-for-the-mc3">A better serial port for the MC3</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=8-bit-compact-flash-interface">8-bit compact flash interface</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=ds1685-rtc-on-the-motorola-bus">DS1685 RTC on the Motorola bus</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=a-simple-dac-using-the-tlc7524">A simple DAC using the TLC7524</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=io-backplane-for-the-mc3">I/O backplane for the MC3</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=some-6800-programs">Some 6800 programs</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=enclosure-for-the-mc3">Enclosure for the MC3</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=mc3-monitor-11">MC3 monitor 1.1</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=more-ram-for-the-mc3">More RAM for the MC3</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=mc3-a-diy-8-bit-computer">MC3 - A DIY 8-bit computer</a></div>
</div>
<div class="content-right-object">
<b>Apple</b><br>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=compact-mac-video-adapter">Compact Mac video adapter</a></div>
</div>
<div class="content-right-object">
<b>Commodore</b><br>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=amiga-600-video-encoder-upgrade">Amiga 600 video encoder upgrade</a></div>
</div>
<div class="content-right-object">
<b>Radio</b><br>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=transceiver-build-part-6">Transceiver build - part 6</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=transceiver-build-part-5">Transceiver build - part 5</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=transceiver-build-part-4">Transceiver build - part 4</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=transceiver-build-part-3">Transceiver build - part 3</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=transceiver-build-part-2">Transceiver build - part 2</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=transceiver-build-part-1">Transceiver build - part 1</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=ne612-receiver-experiment">NE612 receiver experiment</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=software-defined-radio-with-rtl-sdr">Software defined radio with rtl-sdr</a></div>
</div>
<div class="content-right-object">
<b>Linux</b><br>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=upgrading-debian-wheezy-to-jessie">Upgrading Debian Wheezy to Jessie</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=setting-up-nginx-with-php-fpm-under-debian-wheezy">Setting up NGINX with PHP-FPM under Debian Wheezy</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=upgrading-debian-squeeze-to-wheezy">Upgrading Debian Squeeze to Wheezy</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=how-to-quickly-remove-all-unused-packages-under-debian">How to quickly remove all unused packages under Debian</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=speed-up-that-sluggish-iceweasel-firefox">Speed up that sluggish Iceweasel/Firefox</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=software-defined-radio-with-rtl-sdr">Software defined radio with rtl-sdr</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=replacing-a-failed-disk-in-an-md-array">Replacing a failed disk in an MD array</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=programming-pics-using-the-pickit2-and-pk2cmd">Programming PICs using the PICKit2 and pk2cmd</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=getting-e-mu-1820-running-under-linux">Getting E-MU 1820 running under Linux</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=create-you-own-customized-debian-repository-mirror">Create you own customized Debian repository mirror</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=verifying-consistancy-of-an-md-array-under-debian">Verifying consistancy of an MD array under Debian</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=setting-up-raid-with-mdadm-under-debian">Setting up RAID with mdadm under Debian</a></div>
</div>

<div class="content-right-object">
<b>Other</b><br>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=expanding-the-trs-80-mc-10-internal-ram">Expanding the TRS-80 MC-10 internal RAM</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=getting-to-know-the-trs-80-mc-10">Getting to know the TRS-80 MC-10</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=time-electronics-2003s-resurrection">Time Electronics 2003S resurrection</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=panasonic-dmc-g6-hot-pixel-removal">Panasonic DMC-G6 hot pixel removal</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=selecting-a-specific-kms-server-for-windows-activation">Selecting a specific KMS server for Windows activation</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=the-neato-xv-25-vacuum-cleaner">The Neato XV-25 vacuum cleaner</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=installing-net-35-under-windows-8">Installing .NET 3.5 under Windows 8</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=the-korg-monotron-duo">The Korg Monotron Duo</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=creating-dvb-t-compatible-mpeg2-streams-using-ffmpeg">Creating DVB-T compatible MPEG2 streams using FFMPEG</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=rounded-corners-with-css">Rounded corners with CSS</a></div>
<div class="dashed-bottom"><a class="noline" href="https://www.waveguide.se/?article=the-site-is-up">The site is up</a></div>
</div>

<!-- Bottom -->
<div class="content-right-object">
<center><a href="http://www.debian.org/" target="_blank"><img src="./TASMMAN_files/debian_logo.png" border="0" alt="Powered by Debian" title="Powered by Debian"></a>
<a href="http://www.w3.org/html/logo/" target="_blank"><img src="./TASMMAN_files/HTML5_Logo_64.png" alt="HTML5 Powered" title="HTML5 Powered"></a>
<a href="http://www.nginx.org/" target="_blank"><img src="./TASMMAN_files/nginx_logo.png" border="0" alt="Powered by NGINX" title="Powered by NGINX"></a>
<!--<a href="http://www.startssl.com/" target="_blank"><img src="images/startcom_secured_lock_80x15.png" border="0" alt="SSL By StartCom" title="SSL By StartCom"></a>--></center>
<br>
<a rel="me" href="https://mastodon.radio/@sm0xgy">mastodon.radio</a>
<a rel="me" href="https://mastodon.social/@danieltufvesson">mastodon.social</a>
</div>

<!-- SSL -->
<div class="content-right-object">
<font color="green">You are using SSL/HTTPS</font><br><a href="http://www.waveguide.se/?article=8-bit-compact-flash-interface">[click here to go unencrypted]</a></div>

</nav>
      <!-- end content right -->
    </div>
    
    <div id="footer">© Daniel Tufvesson</div>
    
    <!-- end main -->
  </div>

  <!-- Overlay -->
  <div id="overlay-box"></div>
  <div id="overlay-fade"></div>
  <script type="text/javascript" src="./TASMMAN_files/overlay.js"></script> 



</body></html>