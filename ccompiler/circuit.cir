circuit main[ 
  in  logic a,
  in  logic b,
  in  logic c,
  in  logic reassign,
  in  logic clk,
  in  logic d,

  out logic q,
  out logic out1,
  out logic out2,
  out logic out3,
  out logic out4,
  out logic out5
]{


  assign out3 = a || b;
  
  comb{
    out2 = if(a && b || c){
            this = a; 
           } 
           else{
            this = b;
           }
  }

  sequential @(~^ reassign, ^ clk){
    if(~reassign){
      q ^= 1b0;
    }
    else if(clk){
      q ^= d;
    }
  }

  instantiate adder inst_adder(
    a     <- a,
    b     <- b,
    c_in  <- c_in,
    sum   <- sum,
    c_out <- c_out
  );

}


circuit adder[
  in  logic[8] a,
  in  logic[8] b,
  in  logic    carry_in,
  out logic[8] sum,
  out logic    carry_out
]{

  logic [9] sum_and_carry;

  assign sum_and_carry{
    this = a[7:0] + b[7:0] + {7b0, carry_in};
  }
  assign sum{
    this = sum_and_carry[7:0];
  }
  assign carry_out{
    this = sum_and_carry[8];
  }

}