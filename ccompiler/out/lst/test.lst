0001   0000             ; --- FILENAME: test.c
0002   0000             .include "lib/asm/kernel.exp"
0001+  0000             text_org    .EQU  $0400
0002+  0000             sys_bkpt         .EQU  $0000
0003+  0000             sys_rtc          .EQU  $0001
0004+  0000             sys_ide          .EQU  $0002
0005+  0000             sys_io           .EQU  $0003
0006+  0000             sys_filesystem   .EQU  $0004
0007+  0000             sys_spawn_proc   .EQU  $0005
0008+  0000             sys_list         .EQU  $0006
0009+  0000             sys_datetime     .EQU  $0007
0010+  0000             sys_reboot       .EQU  $0008
0011+  0000             sys_pause_proc   .EQU  $0009
0012+  0000             sys_resume_proc  .EQU  $000a
0013+  0000             sys_terminate_proc .EQU  $000b
0014+  0000             sys_system       .EQU  $000c
0015+  0000             sys_boot_install .EQU  $000d
0003   0000             .include "lib/asm/bios.exp"
0001+  0000             BIOS_RESET_VECTOR .EQU  $01c0
0002+  0000             IDE_buffer       .EQU  $8204
0003+  0000             boot_origin      .EQU  $8004
0004+  0000             bios_uart        .EQU  $0002
0005+  0000             bios_ide         .EQU  $0003
0004   0000             
0005   0000             ; --- BEGIN TEXT SEGMENT
0006   0400             .org text_org
0007   0400             main:
0008   0400 FD 49 E0 FF   mov bp, $FFE0 ;
0009   0404 FD 47 E0 FF   mov sp, $FFE0 ; Make space for argc(2 bytes) and for 10 pointers in argv (local variables)
0010   0408             ; puts(""); 
0011   0408             ; --- START FUNCTION CALL
0012   0408 26 27 04      mov b, _s0 ; ""
0013   040B FD AB         swp b
0014   040D D8            push b
0015   040E 07 22 04      call puts
0016   0411 51 02 00      add sp, 2
0017   0414             ; --- END FUNCTION CALL
0018   0414             ; puts(""); 
0019   0414             ; --- START FUNCTION CALL
0020   0414 26 27 04      mov b, _s0 ; ""
0021   0417 FD AB         swp b
0022   0419 D8            push b
0023   041A 07 22 04      call puts
0024   041D 51 02 00      add sp, 2
0025   0420             ; --- END FUNCTION CALL
0026   0420 05 0B         syscall sys_terminate_proc
0027   0422             
0028   0422             puts:
0029   0422 F8 00 00      enter 0 ; (push bp; mov bp, sp)
0030   0425 F9            leave
0031   0426 09            ret
0032   0427             ; --- END TEXT SEGMENT
0033   0427             
0034   0427             ; --- BEGIN DATA SEGMENT
0035   0427 00          _s0: .db "", 0
0036   0428             
0037   0428 2A 04       _heap_top: .dw _heap
0038   042A 00          _heap: .db 0
0039   042B             ; --- END DATA SEGMENT
0040   042B             
0041   042B             .end
tasm: Number of errors = 0
