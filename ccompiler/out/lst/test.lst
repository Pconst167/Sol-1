0001   0000             ; --- FILENAME: test.c
0002   0000             .include "lib/asm/kernel.exp"
0001+  0000             text_org    .EQU  $0400
0002+  0000             sys_bkpt         .EQU  $0000
0003+  0000             sys_rtc          .EQU  $0001
0004+  0000             sys_ide          .EQU  $0002
0005+  0000             sys_io           .EQU  $0003
0006+  0000             sys_filesystem   .EQU  $0004
0007+  0000             sys_spawn_proc   .EQU  $0005
0008+  0000             sys_list         .EQU  $0006
0009+  0000             sys_datetime     .EQU  $0007
0010+  0000             sys_reboot       .EQU  $0008
0011+  0000             sys_pause_proc   .EQU  $0009
0012+  0000             sys_resume_proc  .EQU  $000a
0013+  0000             sys_terminate_proc .EQU  $000b
0014+  0000             sys_system       .EQU  $000c
0015+  0000             sys_boot_install .EQU  $000d
0003   0000             .include "lib/asm/bios.exp"
0001+  0000             BIOS_RESET_VECTOR .EQU  $01c0
0002+  0000             IDE_buffer       .EQU  $8204
0003+  0000             boot_origin      .EQU  $8004
0004+  0000             bios_uart        .EQU  $0002
0005+  0000             bios_ide         .EQU  $0003
0004   0400             .org text_org
0005   0400             
0006   0400             ; --- BEGIN TEXT SEGMENT
0007   0400             main:
0008   0400 FD 49 E0 FF   mov bp, $FFE0 ;
0009   0404 FD 47 E0 FF   mov sp, $FFE0 ; Make space for argc(2 bytes) and for 10 pointers in argv (local variables)
0010   0408             ; return; 
0011   0408 F9            leave
0012   0409 05 0B         syscall sys_terminate_proc
0013   040B             ; --- END TEXT SEGMENT
0014   040B             
0015   040B             ; --- BEGIN DATA SEGMENT
0016   040B 00 00 00 00 _u1_data: .fill 230, 0
0016   040F 00 00 00 00 
0016   0413 00 00 00 00 
0016   0417 00 00 00 00 
0016   041B 00 00 00 00 
0016   041F 00 00 00 00 
0016   0423 00 00 00 00 
0016   0427 00 00 00 00 
0016   042B 00 00 00 00 
0016   042F 00 00 00 00 
0016   0433 00 00 00 00 
0016   0437 00 00 00 00 
0016   043B 00 00 00 00 
0016   043F 00 00 00 00 
0016   0443 00 00 00 00 
0016   0447 00 00 00 00 
0016   044B 00 00 00 00 
0016   044F 00 00 00 00 
0016   0453 00 00 00 00 
0016   0457 00 00 00 00 
0016   045B 00 00 00 00 
0016   045F 00 00 00 00 
0016   0463 00 00 00 00 
0016   0467 00 00 00 00 
0016   046B 00 00 00 00 
0016   046F 00 00 00 00 
0016   0473 00 00 00 00 
0016   0477 00 00 00 00 
0016   047B 00 00 00 00 
0016   047F 00 00 00 00 
0016   0483 00 00 00 00 
0016   0487 00 00 00 00 
0016   048B 00 00 00 00 
0016   048F 00 00 00 00 
0016   0493 00 00 00 00 
0016   0497 00 00 00 00 
0016   049B 00 00 00 00 
0016   049F 00 00 00 00 
0016   04A3 00 00 00 00 
0016   04A7 00 00 00 00 
0016   04AB 00 00 00 00 
0016   04AF 00 00 00 00 
0016   04B3 00 00 00 00 
0016   04B7 00 00 00 00 
0016   04BB 00 00 00 00 
0016   04BF 00 00 00 00 
0016   04C3 00 00 00 00 
0016   04C7 00 00 00 00 
0016   04CB 00 00 00 00 
0016   04CF 00 00 00 00 
0016   04D3 00 00 00 00 
0016   04D7 00 00 00 00 
0016   04DB 00 00 00 00 
0016   04DF 00 00 00 00 
0016   04E3 00 00 00 00 
0016   04E7 00 00 00 00 
0016   04EB 00 00 00 00 
0016   04EF 00 00 
0017   04F1             
0018   04F1 F3 04       _heap_top: .dw _heap
0019   04F3 00          _heap: .db 0
0020   04F4             ; --- END DATA SEGMENT
0021   04F4             
0022   04F4             .end
tasm: Number of errors = 0
