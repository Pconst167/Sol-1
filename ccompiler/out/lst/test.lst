0001   0000             ; --- FILENAME: test.c
0002   0000             .include "lib/asm/kernel.exp"
0001+  0000             text_org    .EQU  $0400
0002+  0000             sys_bkpt         .EQU  $0000
0003+  0000             sys_rtc          .EQU  $0001
0004+  0000             sys_ide          .EQU  $0002
0005+  0000             sys_io           .EQU  $0003
0006+  0000             sys_filesystem   .EQU  $0004
0007+  0000             sys_spawn_proc   .EQU  $0005
0008+  0000             sys_list         .EQU  $0006
0009+  0000             sys_datetime     .EQU  $0007
0010+  0000             sys_reboot       .EQU  $0008
0011+  0000             sys_pause_proc   .EQU  $0009
0012+  0000             sys_resume_proc  .EQU  $000a
0013+  0000             sys_terminate_proc .EQU  $000b
0014+  0000             sys_system       .EQU  $000c
0015+  0000             sys_boot_install .EQU  $000d
0003   0000             .include "lib/asm/bios.exp"
0001+  0000             BIOS_RESET_VECTOR .EQU  $01c0
0002+  0000             IDE_buffer       .EQU  $8204
0003+  0000             boot_origin      .EQU  $8004
0004+  0000             bios_uart        .EQU  $0002
0005+  0000             bios_ide         .EQU  $0003
0004   0400             .org text_org
0005   0400             
0006   0400             ; --- BEGIN TEXT SEGMENT
0007   0400             main:
0008   0400 FD 49 E0 FF   mov bp, $FFE0 ;
0009   0404 FD 47 E0 FF   mov sp, $FFE0 ; Make space for argc(2 bytes) and for 10 pointers in argv (local variables)
0010   0408             ; for(unsigned int i = 0; i < 100; i++){ 
0011   0408             _for1_init:
0012   0408 52 02 00      sub sp, 2
0013   040B             ; --- START LOCAL VAR INITIALIZATION
0014   040B FA FF FF      lea d, [bp + -1] ; $i
0015   040E DA            push d
0016   040F 26 00 00      mov b, $0
0017   0412 E7            pop d
0018   0413 FD 43         mov [d], b
0019   0415             ; --- END LOCAL VAR INITIALIZATION
0020   0415             _for1_cond:
0021   0415 FA FF FF      lea d, [bp + -1] ; $i
0022   0418 2A            mov b, [d]
0023   0419             ; --- START RELATIONAL
0024   0419 D7            push a
0025   041A 11            mov a, b
0026   041B 26 64 00      mov b, $64
0027   041E B0            cmp a, b
0028   041F FD 75         slu ; < (unsigned)
0029   0421 E4            pop a
0030   0422             ; --- END RELATIONAL
0031   0422 C0 00 00      cmp b, 0
0032   0425 C6 38 04      je _for1_exit
0033   0428             _for1_block:
0034   0428             _for1_update:
0035   0428 FA FF FF      lea d, [bp + -1] ; $i
0036   042B 2A            mov b, [d]
0037   042C FD 77         inc b
0038   042E FA FF FF      lea d, [bp + -1] ; $i
0039   0431 FD 43         mov [d], b
0040   0433 FD 7D         dec b
0041   0435 0A 15 04      jmp _for1_cond
0042   0438             _for1_exit:
0043   0438 05 0B         syscall sys_terminate_proc
0044   043A             ; --- END TEXT SEGMENT
0045   043A             
0046   043A             ; --- BEGIN DATA SEGMENT
0047   043A             
0048   043A 3C 04       _heap_top: .dw _heap
0049   043C 00          _heap: .db 0
0050   043D             ; --- END DATA SEGMENT
0051   043D             
0052   043D             .end
tasm: Number of errors = 0
