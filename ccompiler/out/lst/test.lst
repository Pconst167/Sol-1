0001   0000             ; --- FILENAME: test.c
0002   0000             .include "lib/asm/kernel.exp"
0001+  0000             text_org    .EQU  $0400
0002+  0000             sys_bkpt         .EQU  $0000
0003+  0000             sys_rtc          .EQU  $0001
0004+  0000             sys_ide          .EQU  $0002
0005+  0000             sys_io           .EQU  $0003
0006+  0000             sys_filesystem   .EQU  $0004
0007+  0000             sys_spawn_proc   .EQU  $0005
0008+  0000             sys_list         .EQU  $0006
0009+  0000             sys_datetime     .EQU  $0007
0010+  0000             sys_reboot       .EQU  $0008
0011+  0000             sys_pause_proc   .EQU  $0009
0012+  0000             sys_resume_proc  .EQU  $000a
0013+  0000             sys_terminate_proc .EQU  $000b
0014+  0000             sys_system       .EQU  $000c
0015+  0000             sys_boot_install .EQU  $000d
0003   0000             .include "lib/asm/bios.exp"
0001+  0000             BIOS_RESET_VECTOR .EQU  $01c0
0002+  0000             IDE_buffer       .EQU  $8204
0003+  0000             boot_origin      .EQU  $8004
0004+  0000             bios_uart        .EQU  $0002
0005+  0000             bios_ide         .EQU  $0003
0004   0400             .org text_org
0005   0400             
0006   0400             ; --- BEGIN TEXT SEGMENT
0007   0400             main:
0008   0400 FD 49 E0 FF   mov bp, $FFE0 ;
0009   0404 FD 47 E0 FF   mov sp, $FFE0 ; Make space for argc(2 bytes) and for 10 pointers in argv (local variables)
0010   0408             ; u1[0]; 
0011   0408 3B 20 04      mov d, _u1_data ; $u1
0012   040B D7            push a
0013   040C DA            push d
0014   040D FD 2E 00 00   mov32 cb, $00000000
0014   0411 00 00 
0015   0413 E7            pop d
0016   0414 FD 13 17 00   mma 23 ; mov a, 23; mul a, b; add d, b
0017   0418 E4            pop a
0018   0419 2D            mov b, d
0019   041A 38 00 00      mov c, 0
0020   041D             ; return; 
0021   041D F9            leave
0022   041E 05 0B         syscall sys_terminate_proc
0023   0420             ; --- END TEXT SEGMENT
0024   0420             
0025   0420             ; --- BEGIN DATA SEGMENT
0026   0420 00 00 00 00 _u1_data: .fill 230, 0
0026   0424 00 00 00 00 
0026   0428 00 00 00 00 
0026   042C 00 00 00 00 
0026   0430 00 00 00 00 
0026   0434 00 00 00 00 
0026   0438 00 00 00 00 
0026   043C 00 00 00 00 
0026   0440 00 00 00 00 
0026   0444 00 00 00 00 
0026   0448 00 00 00 00 
0026   044C 00 00 00 00 
0026   0450 00 00 00 00 
0026   0454 00 00 00 00 
0026   0458 00 00 00 00 
0026   045C 00 00 00 00 
0026   0460 00 00 00 00 
0026   0464 00 00 00 00 
0026   0468 00 00 00 00 
0026   046C 00 00 00 00 
0026   0470 00 00 00 00 
0026   0474 00 00 00 00 
0026   0478 00 00 00 00 
0026   047C 00 00 00 00 
0026   0480 00 00 00 00 
0026   0484 00 00 00 00 
0026   0488 00 00 00 00 
0026   048C 00 00 00 00 
0026   0490 00 00 00 00 
0026   0494 00 00 00 00 
0026   0498 00 00 00 00 
0026   049C 00 00 00 00 
0026   04A0 00 00 00 00 
0026   04A4 00 00 00 00 
0026   04A8 00 00 00 00 
0026   04AC 00 00 00 00 
0026   04B0 00 00 00 00 
0026   04B4 00 00 00 00 
0026   04B8 00 00 00 00 
0026   04BC 00 00 00 00 
0026   04C0 00 00 00 00 
0026   04C4 00 00 00 00 
0026   04C8 00 00 00 00 
0026   04CC 00 00 00 00 
0026   04D0 00 00 00 00 
0026   04D4 00 00 00 00 
0026   04D8 00 00 00 00 
0026   04DC 00 00 00 00 
0026   04E0 00 00 00 00 
0026   04E4 00 00 00 00 
0026   04E8 00 00 00 00 
0026   04EC 00 00 00 00 
0026   04F0 00 00 00 00 
0026   04F4 00 00 00 00 
0026   04F8 00 00 00 00 
0026   04FC 00 00 00 00 
0026   0500 00 00 00 00 
0026   0504 00 00 
0027   0506             
0028   0506 08 05       _heap_top: .dw _heap
0029   0508 00          _heap: .db 0
0030   0509             ; --- END DATA SEGMENT
0031   0509             
0032   0509             .end
tasm: Number of errors = 0
