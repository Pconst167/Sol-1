0001   0000             ; --- FILENAME: test.c
0002   0000             .include "lib/asm/kernel.exp"
0001+  0000             text_org    .EQU  $0400
0002+  0000             sys_bkpt         .EQU  $0000
0003+  0000             sys_rtc          .EQU  $0001
0004+  0000             sys_ide          .EQU  $0002
0005+  0000             sys_io           .EQU  $0003
0006+  0000             sys_filesystem   .EQU  $0004
0007+  0000             sys_spawn_proc   .EQU  $0005
0008+  0000             sys_list         .EQU  $0006
0009+  0000             sys_datetime     .EQU  $0007
0010+  0000             sys_reboot       .EQU  $0008
0011+  0000             sys_pause_proc   .EQU  $0009
0012+  0000             sys_resume_proc  .EQU  $000a
0013+  0000             sys_terminate_proc .EQU  $000b
0014+  0000             sys_system       .EQU  $000c
0015+  0000             sys_boot_install .EQU  $000d
0003   0000             .include "lib/asm/bios.exp"
0001+  0000             BIOS_RESET_VECTOR .EQU  $01c0
0002+  0000             IDE_buffer       .EQU  $8204
0003+  0000             boot_origin      .EQU  $8004
0004+  0000             bios_uart        .EQU  $0002
0005+  0000             bios_ide         .EQU  $0003
0004   0400             .org text_org
0005   0400             
0006   0400             ; --- BEGIN TEXT SEGMENT
0007   0400             main:
0008   0400 FD 49 E0 FF   mov bp, $FFE0 ;
0009   0404 FD 47 E0 FF   mov sp, $FFE0 ; Make space for argc(2 bytes) and for 10 pointers in argv (local variables)
0010   0408             ; ss=ss2; 
0011   0408 3B 1F 04      mov d, _ss_data ; $ss
0012   040B DA            push d
0013   040C 3B 22 04      mov d, _ss2_data ; $ss2
0014   040F 2D            mov b, d
0015   0410 38 00 00      mov c, 0
0016   0413 E7            pop d
0017   0414 FD 28         mov si, b
0018   0416 FD 50         mov di, d
0019   0418 38 03 00      mov c, 3
0020   041B FD F5         rep movsb
0021   041D 05 0B         syscall sys_terminate_proc
0022   041F             ; --- END TEXT SEGMENT
0023   041F             
0024   041F             ; --- BEGIN DATA SEGMENT
0025   041F 00 00 00    _ss_data: .fill 3, 0
0026   0422 00 00 00    _ss2_data: .fill 3, 0
0027   0425             
0028   0425 27 04       _heap_top: .dw _heap
0029   0427 00          _heap: .db 0
0030   0428             ; --- END DATA SEGMENT
0031   0428             
0032   0428             .end
tasm: Number of errors = 0
