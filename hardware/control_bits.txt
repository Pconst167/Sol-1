ROM0                ROM1               ROM2 (AY-BA)         ROM3 (AU-AV)      ROM4 (AP-AR)
------------------------------------------------------------------------------------------
typ0                u_offset_6         u_zf_in_src_0        shift_src_0       alu_a_src_3
typ1                cond_invert        u_zf_in_src_1        shift_src_1       alu_a_src_4
u_offset_0          cond_flag_src      u_cf_in_src_0        shift_src_2       alu_a_src_5
u_offset_1          cond_sel_0         u_cf_in_src_1        zbus_in_src_0     alu_op_0
u_offset_2          cond_sel_1         u_sf_in_src          zbus_in_src_1     alu_op_1
u_offset_3          cond_sel_2         u_of_in_src          alu_a_src_0       alu_op_2
u_offset_4          cond_sel_3         ir_wrt               alu_a_src_1       alu_op_3
u_offset_5          escape             status_flags_wrt     alu_a_src_2       alu_mode    
                                                          
ROM5 (AU-AV 21)     ROM6 (AW-AX 31)      only these signals are sent out to second board:
------------------------------------
alu_cf_in_src0      cf_in_src_2          alu_a_src_0, alu_a_src_1, alu_a_src_2 
alu_cf_in_src1      sf_in_src_0          alu_a_src_3, alu_a_src_4, alu_b_src_0, alu_b_src_1          
alu_cf_in_invert    sf_in_src_1          
zf_in_src_0         of_in_src_0          
zf_in_src_1         of_in_src_1          
alu_cf_out_invert   of_in_src_2          
cf_in_src_0         rd                   
cf_in_src_1         wr              

ROM7 (BD-BE)        ROM8               ROM9            ROM10         ROM11              ROM12
--------------------------------------------------------------------------------------------------------------------
alu_b_src_0         bl_wrt             mdr_h_wrt       mar_h_wrt     unused             mdr_to_pagetable_data_buffer
alu_b_src_1         bh_wrt             tdr_l_wrt       bp_l_wrt      int_vector_wrt     force_user_ptb         
alu_b_src_2         al_wrt             tdr_h_wrt       bp_h_wrt      irq_masks_wrt      unused
display_reg_load    ah_wrt             di_l_wrt        pc_l_wrt      mar_in_src         unused
dl_wrt              mdr_in_src         di_h_wrt        pc_h_wrt      int_ack            unused
dh_wrt              mdr_out_src        si_l_wrt        sp_l_wrt      clear_all_ints     unused
cl_wrt              mdr_out_en         si_h_wrt        sp_h_wrt      ptb_wrt            gl_wrt
ch_wrt              mdr_l_wrt          mar_l_wrt       unused        page_table_we      gh_wrt                      

ROM13 (BW-BX 12)
------------------
immy_0
immy_1
immy_2
immy_3
immy_4
immy_5
immy_6
immy_7

NOTES:
display_reg_load   : is used during fetch to select and load register display
mdr_out_en         : must invert before sending
mdr_l_wrt          : but for _wrt controls, there is no need to invert. we use active low micro-programming for these
irq_masks_wrt      : wrt signals are also active low,      
int_ack            : active high
force_user_ptb     : goes to board as PAGE_TABLE_ADDR_SOURCE via OR gate

AVAILABLE BACKPLANE SIGNALS:
13, 14
17 .. 74

USED BACKPLANE SIGNALS:
SIGNAL NAME         BACKPLANE PIN NUMBER
clk                 13 and 31
rst                 14
ide_activity        22
panel_regsel_4      23
panel_regsel_3      24
panel_regsel_2      25
panel_regsel_1      26
panel_regsel_0      27
trace_continue      28
halt                29
dma_ack             30
dma_req             32
wait                at 33
wr                  at 34
rd                  at 35
data_0-data_7       43 start
mem_io              at 44 
addr_0-addr_21      66 start
int_0-int_7         74 start - INT0 is at 74 ... INT7 is at 67
3.3V                79

SPECIAL MICROCODE ADDRESSES
fetch             - 00000001000000 = 0x0040 = 64d
interruption      - 00000001010000 = 0x0050 = 80d



wire at AX34 has a little cut. if something ever goes weird, check this.

*********************************************************************************************


22 bit address space + memIO bit


*** PAGING OFF

>> 64KB space 
>> address space is mapped to device space
>> 32KB ROM, the rest is RAM + remaining devices



Sol-1 runned its first program on 12th June 2020.
